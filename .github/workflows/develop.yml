name: Github Actions Develop Branch

on:
  push:
    branches:
      - develop

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Check output folder
        run: ls -R
      - uses: actions/upload-artifact@v3
        with:
          name: static-output
          path: out/
          retention-days: 1

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --system --ignore-pipfile
      - name: Testing
        run: |
          pytest test/

  terraform-build:
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.get_bucket_name.outputs.bucket_name }}
    defaults:
      run:
        working-directory: ./tf/develop
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from Develop account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN_DEVELOP }}
          aws-region: ap-southeast-2
          role-duration-seconds: 1200
          role-session-name: GitHubActions
      - name: Setup Terraform v2.0.3
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
          terraform_wrapper: false
      - name: Setup Terraform version
        run: terraform --version
      - name: Setup Terraform wrapper path
        run: which terraform
      - name: Setup Terragrunt v0.43.0
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.0/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v
      - name: Terragrunt Init
        run: terragrunt init
      - name: Terragrunt Plan
        run: terragrunt run-all plan
      - name: Terragrunt Apply
        run: terragrunt run-all apply --terragrunt-non-interactive
      - name: Get bucket name
        id: get_bucket_name
        working-directory: ./tf/develop/frontend
        run: |
          pwd
          terragrunt output -json
          bucket_name=$(terragrunt output -json | jq -r ".bucket_name.value")
          echo "bucket_name=$bucket_name" >> $GITHUB_OUTPUT

  frontend-sync:
    needs: [frontend-build, terraform-build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from Develop account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN_DEVELOP }}
          aws-region: ap-southeast-2
          role-duration-seconds: 1200
          role-session-name: GitHubActions
      - uses: actions/download-artifact@v3
        with:
          name: static-output
      - name: Display structure of downloaded files
        run: ls -R
      - name: Copy files to the develop bucket
        run: |
          echo ${{needs.terraform-build.outputs.bucket_name}}
          aws s3 sync ./out  s3://${{needs.terraform-build.outputs.bucket_name}}

  # terraform-destroy:
  #   needs: sync
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./tf/develop
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Configure AWS credentials from Develop account
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ vars.AWS_ROLE_ARN_DEVELOP }}
  #         aws-region: ap-southeast-2
  #         role-duration-seconds: 1200
  #         role-session-name: GitHubActions
  #     - name: Setup Terraform v2.0.3
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.3.7
  #         terraform_wrapper: false
  #     - name: Setup Terraform version
  #       run: terraform --version
  #     - name: Setup Terraform wrapper path
  #       run: which terraform
  #     - name: Setup Terragrunt v0.43.0
  #       run: |
  #         sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.0/terragrunt_linux_amd64"
  #         sudo chmod +x /bin/terragrunt
  #         terragrunt -v
  #     - name: Terragrunt Destroy
  #       run: terragrunt run-all destroy --terragrunt-non-interactive
